INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI
    
    root = Tk()
    root.title("A Title")
    g = DWatchGUI(root, eventhandler)
    
    eventhandler.start()
    root.mainloop()
    
    exit() # keep SVM from crashing at exit

STATECHART:
    System [DS]
        Clock [CS] [DS]
            Ticker [DS]
        Chrono [CS] [DS]
            Ticker [DS]
        Mode [CS] [DS]
            DisplayTime [DS]
                GUITickHandler [DS]
            DisplayTimeWait
                GUITickHandler [DS]
            DisplayChrono
                GUITickHandler [DS]
            EditTime
                Selection [DS]
                SelectionIncrementWait
                SelectionExitWait
            EditAlarm
                Selection [DS]
                SelectionIncrementWait
                SelectionExitWait
        Light [CS] [DS]
            Off [DS]
            On
            Waiting

###############################################################################
# INITIALIZATION                                                              #
###############################################################################

ENTER:
    N: System
    O: IsClockRunning = True
       IsChronoRunning = False
       g.resetChrono()

###############################################################################
# SYSTEM CLOCK                                                                #
###############################################################################

TRANSITION:
    S: System.Clock.Ticker
    N: System.Clock.Ticker
    T: 1
    C: IsClockRunning
    O: g.increaseTimeByOne()
       [EVENT("clocktick")]

###############################################################################
# SYSTEM CHRONO                                                               #
###############################################################################

TRANSITION:
    S: System.Chrono.Ticker
    N: System.Chrono.Ticker
    T: 0.25
    C: IsChronoRunning
    O: g.increaseChronoByOne()
       [EVENT("chronotick")]

###############################################################################
# DISPLAY TIME [WAIT] MODE                                                    #
###############################################################################

ENTER:
    N: System.Mode.DisplayTime
    O: g.refreshTimeDisplay()

ENTER:
    N: System.Mode.DisplayTimeWait
    O: g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.DisplayTime.GUITickHandler
    N: System.Mode.DisplayTime.GUITickHandler
    E: clocktick
    O: g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.DisplayTimeWait.GUITickHandler
    N: System.Mode.DisplayTimeWait.GUITickHandler
    E: clocktick
    O: g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.DisplayTime
    N: System.Mode.DisplayChrono
    E: changeMode

TRANSITION:
    S: System.Mode.DisplayTime
    N: System.Mode.DisplayTimeWait
    E: editTime

TRANSITION: [0]
    S: System.Mode.DisplayTimeWait
    N: System.Mode.EditTime
    T: 1.5

TRANSITION: [1]
    S: System.Mode.DisplayTimeWait
    N: System.Mode.DisplayTime
    E: released

###############################################################################
# DISPLAY CHRONO MODE                                                         #
###############################################################################

ENTER:
    N: System.Mode.DisplayChrono
    O: g.refreshChronoDisplay()

TRANSITION:
    S: System.Mode.DisplayChrono
    N: System.Mode.DisplayChrono
    E: initChrono
    O: IsChronoRunning = not IsChronoRunning

TRANSITION:
    S: System.Mode.DisplayChrono
    N: System.Mode.DisplayChrono
    E: resetChrono
    O: g.resetChrono()

TRANSITION:
    S: System.Mode.DisplayChrono.GUITickHandler
    N: System.Mode.DisplayChrono.GUITickHandler
    E: chronotick
    O: g.refreshChronoDisplay()

TRANSITION:
    S: System.Mode.DisplayChrono
    N: System.Mode.DisplayTime
    E: changeMode

###############################################################################
# EDIT TIME MODE                                                              #
###############################################################################

ENTER:
    N: System.Mode.EditTime
    O: IsClockRunning = False
       g.startSelection()
       g.refreshTimeDisplay()

EXIT:
    S: System.Mode.EditTime
    O: IsClockRunning = True
       g.stopSelection()
       g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.EditTime.Selection
    N: System.Mode.EditTime.SelectionIncrementWait
    E: increase
    O: g.increaseSelection()
       g.refreshTimeDisplay()

TRANSITION: [1]
    S: System.Mode.EditTime.SelectionIncrementWait
    N: System.Mode.EditTime.SelectionIncrementWait
    T: 0.3
    O: g.increaseSelection()
       g.refreshTimeDisplay()

TRANSITION: [0]
    S: System.Mode.EditTime.SelectionIncrementWait
    N: System.Mode.EditTime.Selection
    E: stopInc
    O: g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.EditTime.Selection
    N: System.Mode.EditTime.Selection
    E: nextGroup
    O: g.selectNext()

TRANSITION:
    S: System.Mode.EditTime.Selection
    N: System.Mode.DisplayTime
    T: 5

TRANSITION:
    S: System.Mode.EditTime.Selection
    N: System.Mode.EditTime.SelectionExitWait
    E: finishEdit

TRANSITION:
    S: System.Mode.EditTime.SelectionExitWait
    N: System.Mode.DisplayTime
    T: 2

TRANSITION:
    S: System.Mode.EditTime.SelectionExitWait
    N: System.Mode.EditTime.Selection
    E: released

###############################################################################
# EDIT ALARM MODE                                                             #
###############################################################################

ENTER:
    N: System.Mode.EditAlarm
    O: g.startSelection()
       g.refreshAlarmDisplay()

EXIT:
    S: System.Mode.EditAlarm
    O: g.stopSelection()
       g.refreshTimeDisplay()

TRANSITION:
    S: System.Mode.EditAlarm.Selection
    N: System.Mode.EditAlarm.SelectionIncrementWait
    E: increase
    O: g.increaseSelection()
       g.refreshAlarmDisplay()

TRANSITION: [1]
    S: System.Mode.EditAlarm.SelectionIncrementWait
    N: System.Mode.EditAlarm.SelectionIncrementWait
    T: 0.3
    O: g.increaseSelection()
       g.refreshAlarmDisplay()

TRANSITION: [0]
    S: System.Mode.EditAlarm.SelectionIncrementWait
    N: System.Mode.EditAlarm.Selection
    E: stopInc
    O: g.refreshAlarmDisplay()

TRANSITION:
    S: System.Mode.EditAlarm.Selection
    N: System.Mode.EditAlarm.Selection
    E: nextGroup
    O: g.selectNext()

TRANSITION:
    S: System.Mode.EditAlarm.Selection
    N: System.Mode.DisplayTime
    T: 5

TRANSITION:
    S: System.Mode.EditAlarm.Selection
    N: System.Mode.EditAlarm.SelectionExitWait
    E: finishEdit

TRANSITION:
    S: System.Mode.EditAlarm.SelectionExitWait
    N: System.Mode.DisplayTime
    T: 2

TRANSITION:
    S: System.Mode.EditAlarm.SelectionExitWait
    N: System.Mode.EditAlarm.Selection
    E: released

###############################################################################
# BACKGROUND LIGHTS                                                           #
###############################################################################

TRANSITION:
    S: System.Light.Off
    N: System.Light.On
    E: lightOn
    O: g.setIndiglo()

TRANSITION:
    S: System.Light.On
    N: System.Light.Waiting
    E: lightOff
    O: LightTicksCount = 0

TRANSITION:
    S: System.Light.Waiting
    N: System.Light.Off
    T: 2
    O: g.unsetIndiglo()
